repeat task.wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer:FindFirstChild("PlayerGui")

-- === PlatoBoost API setup ===
local service = 3322
local secret = "631ebd2b-bed3-4cf7-854c-14a89a647c58"
local useNonce = true

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local Lighting = game:GetService("Lighting")

local fSetClipboard = syn and syn.setclipboard or setclipboard or toclipboard
local fRequest = syn and syn.request or request or http_request
local fStringChar = string.char
local fToString = tostring
local fOsTime = os.time
local fMathRandom = math.random
local fMathFloor = math.floor
local fGetHwid = gethwid or function() return Player.UserId end

local function lEncode(data) return HttpService:JSONEncode(data) end
local function lDecode(data) return HttpService:JSONDecode(data) end
local function lDigest(input)
    local hash = {}
    for i = 1, #input do table.insert(hash, string.byte(input, i)) end
    local hex = ""
    for _, byte in ipairs(hash) do hex = hex .. string.format("%02x", byte) end
    return hex
end

local host = "https://api.platoboost.com"
local test = fRequest({ Url = host .. "/public/connectivity", Method = "GET" })
if not test or (test.StatusCode ~= 200 and test.StatusCode ~= 429) then
    host = "https://api.platoboost.net"
end

local cachedLink, cachedTime = "", 0
local function cacheLink()
    if cachedTime + 600 < fOsTime() then
        local res = fRequest({
            Url = host .. "/public/start",
            Method = "POST",
            Body = lEncode({ service = service, identifier = lDigest(fGetHwid()) }),
            Headers = { ["Content-Type"] = "application/json" }
        })
        if res and res.StatusCode == 200 then
            local data = lDecode(res.Body)
            if data.success then
                cachedLink = data.data.url
                cachedTime = fOsTime()
                return true, cachedLink
            else
                return false, data.message
            end
        elseif res and res.StatusCode == 429 then
            return false, "Rate limited. Wait a bit."
        end
        return false, "Could not contact server."
    else
        return true, cachedLink
    end
end

local function copyLink()
    local ok, link = cacheLink()
    if ok then
        fSetClipboard(link)
        return true, link
    else
        return false, link
    end
end

local function generateNonce()
    local str = ""
    for _ = 1, 16 do str = str .. fStringChar(fMathFloor(fMathRandom() * 26) + 97) end
    return str
end

local function verifyKey(key)
    local nonce = generateNonce()
    local url = host .. "/public/whitelist/" .. service .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key
    if useNonce then url = url .. "&nonce=" .. nonce end

    -- Save the key
    if writefile then
        pcall(function()
            writefile("falcon_key.txt", key)
        end)
    end

    local res = fRequest({ Url = url, Method = "GET" })
    if not res then return false end
    if res.StatusCode == 200 then
        local body = lDecode(res.Body)
        return body.success and body.data.valid
    end
    return false
end

-- === UI Setup ===
task.spawn(function()
    local blur = Instance.new("BlurEffect", Lighting)
    blur.Size = 15
    blur.Name = "KeySystemBlur"

    local gui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
    gui.Name = "KeySystemUI"
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0, 400, 0, 200)
    frame.Position = UDim2.new(0.5, -200, 0.5, -100)
    frame.BackgroundColor3 = Color3.fromRGB(14,14,14)
    frame.Active = true
    frame.Draggable = true
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Text = "Falcon Key System"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.BackgroundTransparency = 1

    local closeBtn = Instance.new("TextButton", frame)
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0, 5)
    closeBtn.Text = "Ã—"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 22
    closeBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 12)

    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
        blur:Destroy()
    end)

    local box = Instance.new("TextBox", frame)
    box.Size = UDim2.new(0.8, 0, 0.2, 0)
    box.Position = UDim2.new(0.1, 0, 0.3, 0)
    box.PlaceholderText = "Enter key here"
    box.TextColor3 = Color3.fromRGB(255, 255, 255)
    box.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
    box.Font = Enum.Font.Gotham
    box.TextSize = 16
    Instance.new("UICorner", box).CornerRadius = UDim.new(0, 12)

    local status = Instance.new("TextLabel", frame)
    status.Size = UDim2.new(1, 0, 0.15, 0)
    status.Position = UDim2.new(0, 0, 0.15, 0)
    status.Text = ""
    status.TextColor3 = Color3.fromRGB(150, 200, 255)
    status.Font = Enum.Font.Gotham
    status.TextSize = 14
    status.BackgroundTransparency = 1

    local getBtn = Instance.new("TextButton", frame)
    getBtn.Size = UDim2.new(0.4, 0, 0.2, 0)
    getBtn.Position = UDim2.new(0.05, 0, 0.65, 0)
    getBtn.Text = "Get Key"
    getBtn.Font = Enum.Font.GothamBold
    getBtn.TextSize = 16
    getBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    getBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", getBtn).CornerRadius = UDim.new(0, 12)

    local checkBtn = Instance.new("TextButton", frame)
    checkBtn.Size = UDim2.new(0.4, 0, 0.2, 0)
    checkBtn.Position = UDim2.new(0.55, 0, 0.65, 0)
    checkBtn.Text = "Check Key"
    checkBtn.Font = Enum.Font.GothamBold
    checkBtn.TextSize = 16
    checkBtn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    checkBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", checkBtn).CornerRadius = UDim.new(0, 12)

    getBtn.MouseButton1Click:Connect(function()
        local ok, msg = copyLink()
        status.Text = ok and "Key link copied!" or ("Error: " .. tostring(msg))
    end)

    checkBtn.MouseButton1Click:Connect(function()
        local key = box.Text
        status.Text = "Checking..."
        if verifyKey(key) then
            status.Text = "Key verified! Loading..."
            task.wait(0.5)
            gui:Destroy()
            blur:Destroy()

            -- FALCON fullscreen loading animation
            local loadingGui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
            loadingGui.IgnoreGuiInset = true
            loadingGui.ResetOnSpawn = false
            loadingGui.Name = "FalconLoading"

            local bg = Instance.new("Frame", loadingGui)
            bg.Size = UDim2.new(1, 0, 1, 0)
            bg.BackgroundColor3 = Color3.new(0, 0, 0)

            local text = Instance.new("TextLabel", bg)
            text.Size = UDim2.new(1, 0, 1, 0)
            text.Text = "FALCON"
            text.TextColor3 = Color3.new(1, 1, 1)
            text.Font = Enum.Font.GothamBlack
            text.TextScaled = true
            text.BackgroundTransparency = 1
            text.TextTransparency = 0

            for i = 0, 1, 0.05 do
                bg.BackgroundTransparency = i
                text.TextTransparency = i
                task.wait(0.07)
            end

            loadingGui:Destroy()

            -- Load your actual script
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nyazs/falcontestui/refs/heads/main/falconui"))()
        else
            status.Text = "Invalid key!"
        end
    end)
end)
